// knockout-arraytransforms 0.2.1 (https://github.com/mwiencek/knockout-arrayTransforms)
// Released under the MIT (X11) License; see the LICENSE file in the official code repository.
!function(a){"undefined"!=typeof module&&"undefined"!=typeof module.exports?a(module.exports=require("knockout")):"function"==typeof define&&define.amd?define(["knockout"],a):a(window.ko)}(function(a){function b(b){for(var d,e={},f=0,g=0;d=b[g];g++){var h=d.status;if("retained"!==h){var i=this.observables,j=d.index,k=d.moved,l=d.value;if(void 0!==k){if("added"===h)var m=j,n=k+f;else if("deleted"===h)var m=k,n=j+f;if(void 0===e[m]){e[m]=!0;var o=i[n];i.splice(n,1),i.splice(m,0,o),this.valueMoved(l,m,n,f,c(o))}}if("added"===h){if(void 0===k){var o=this.applyCallback(l,j);i.splice(j,0,o),this.valueAdded(l,j,c(o))}f++}else if("deleted"===h){if(void 0===k){var o=i.splice(j+f,1)[0];a.isObservable(o)&&o.dispose(),this.valueDeleted(l,j+f,c(o))}f--}}}this.changes&&this.changes.length&&this.transform.notifySubscribers(this.transform.peek())}function c(a){return"function"==typeof a?a.peek():a}function d(a,b,c){for(var d,e=b.length,f=e;f--;)if(d=c?f:e-f-1,b[d]===a)return d;return-1}function e(){}function f(a,b){return a===b}function g(b,c){var e=this.callback;if(void 0===e)return b;var g=this,i="callback";if("function"!=typeof e){if(g=b,i=e,e=g[i],"function"!=typeof e)return e;if(a.isObservable(e))return h(this,b,e),e}var j=this.original,k=a.computed(function(){return g[i](b,null===c?d(b,j.peek()):c)});return k.isActive()?(c=null,k.equalityComparer=f,h(this,b,k),k):(k.dispose(),k.peek())}function h(a,b,c){var d=c.peek();c.subscribe(function(c){a.valueMutated(b,c,d),d=c,a.changes&&a.changes.length&&a.transform.notifySubscribers(a.transform.peek())})}a.arrayTranforms={},a.arrayTranforms.makeTransform=function(c){function d(a,b){this.original=a,this.observables=[],this.callback=b,this.transform=this.init()}d.prototype.applySequentialDiff=b,d.prototype.applyCallback=g,a.utils.extend(d.prototype,c),a.observableArray.fn[c.name]=function(c){var f=new d(this,c),g=f.transform;a.isObservable(g)&&g.cacheDiffForKnownOperation&&(f.changes=[],f.transformedArray=g.peek(),g.subscribe(e,null,"arrayChange").dispose(),g._subscriptions.change[0].callback=function(){var a=f.changes;a.length&&(g.notifySubscribers(a,"arrayChange"),f.changes=[])}),this.subscribe(b,f,"arrayChange");for(var h=this.peek(),i=[],j=0,k=h.length;k>j;j++)i.push({status:"added",value:h[j],index:j});return f.applySequentialDiff(i),delete h,delete i,g}},a.arrayTranforms.makeTransform({name:"sortBy",init:function(){return this.keyCounts={},this.sortedKeys=[],a.observableArray([])},valueAdded:function(a,b,c){var d=this.sortedIndexOf(c,a),e=this.keyCounts;this.transformedArray.splice(d,0,a),this.sortedKeys.splice(d,0,c),e[c]=e[c]+1||1,this.changes.push({status:"added",value:a,index:d})},valueDeleted:function(a,b,c){var e=this.transformedArray,f=d(a,e,b>e.length/2);e.splice(f,1),this.sortedKeys.splice(f,1),this.keyCounts[c]--,this.changes.push({status:"deleted",value:a,index:f})},valueMoved:function(a,b,c,e,f){var g=d(a,this.transformedArray),h=this.sortedIndexOf(f,a);g!==h&&this.moveValue(a,f,g,h)},valueMutated:function(a,b,c){var d=this.sortedIndexOf(c,a),e=this.sortedIndexOf(b,a);if(d!==e){this.moveValue(a,b,d,e);var f=this.keyCounts;f[c]--,f[b]=f[b]+1||1}},moveValue:function(a,b,c,d){var e=this.transformedArray,f=this.sortedKeys;e.splice(c,1),f.splice(c,1),d>c&&d--,e.splice(d,0,a),f.splice(d,0,b),this.changes.push({status:"added",index:d,moved:c,value:a},{status:"deleted",index:c,moved:d,value:a})},sortedIndexOf:function(a,b){var d=this.sortedKeys,e=d.length;if(0===e)return 0;for(var f,g=0,h=e-1;h>=g;)if(f=g+h>>1,d[f]<a)g=f+1;else if(h=f,g===h)break;var i=this.keyCounts[a],j=0;if(i)for(var k=this.original.peek(),l=this.observables,m=0;e>m&&k[m]!==b&&(c(l[m])===a&&j++,j!==i);m++);return g+j}}),a.arrayTranforms.makeTransform({name:"filter",init:function(){return a.observableArray([])},valueAdded:function(a,b,c){if(c){var d=this.filterIndexOf(a,b>this.original.peek().length/2);this.transformedArray.splice(d,0,a),this.changes.push({status:"added",index:d,value:a})}},valueDeleted:function(a,b,c){if(c){var e=this.transformedArray,f=d(a,e,b>this.original.peek().length/2);e.splice(f,1),this.changes.push({status:"deleted",index:f,value:a})}},valueMoved:function(a,b,c,e,f){if(f){var g=this.transformedArray,h=this.original.peek().length/2,i=d(a,g,c>h);g.splice(i,1);var j=this.filterIndexOf(a,b>h);g.splice(j,0,a),this.changes.push({status:"deleted",index:i,moved:j,value:a},{status:"added",index:j,moved:i,value:a})}},valueMutated:function(a,b,c){b&&!c?this.valueAdded(a,0,!0):!b&&c&&this.valueDeleted(a,0,!0)},filterIndexOf:function(a,b){for(var d,e=this.observables,f=this.original.peek(),g=b?0:-1,h=f.length,i=h;--i&&(d=b?i:h-i-1,f[d]!==a);)c(e[d])&&g++;return b?this.transformedArray.length-g:g+1}}),a.arrayTranforms.makeTransform({name:"map",init:function(){return a.observableArray([])},valueAdded:function(a,b,c){this.transformedArray.splice(b,0,c),this.changes.push({status:"added",index:b,value:c})},valueDeleted:function(a,b,c){this.transformedArray.splice(b,1),this.changes.push({status:"deleted",index:b,value:c})},valueMoved:function(a,b,c,d,e){this.transformedArray.splice(c,1),this.transformedArray.splice(b,0,e),this.changes.push({status:"added",index:b,moved:c-d,value:e},{status:"deleted",index:c-d,moved:b,value:e})},valueMutated:function(a,b,c){var e=d(a,this.original.peek());this.transformedArray.splice(e,1,b),this.changes.push({status:"deleted",index:e,value:c},{status:"added",index:e,value:b})}});var i={init:function(){return this.truthinessCount=0,a.observable(this.getTruthiness())},valueAdded:function(a,b,c){this.valueMutated(null,c,!1)},valueDeleted:function(a,b,c){this.valueMutated(null,!1,c)},valueMutated:function(a,b,c){b&&!c?this.truthinessCount++:c&&!b&&this.truthinessCount--,this.transform(this.getTruthiness())}};a.arrayTranforms.makeTransform(a.utils.extend({name:"any",getTruthiness:function(){return this.truthinessCount>0}},i)),a.arrayTranforms.makeTransform(a.utils.extend({name:"all",getTruthiness:function(){return this.truthinessCount===this.observables.length}},i)),a.observableArray.fn.some=a.observableArray.fn.any,a.observableArray.fn.every=a.observableArray.fn.all});